{"version":3,"sources":["components/utils.js","components/Stage.jsx","components/Chart.jsx","components/Controls.jsx","App.js","serviceWorker.js","index.js"],"names":["_filterByKey","data","key","value","first","_","getComparisons","variables","keys","map","v","compare","displayCompare","getExtent","x","values","off","getHeadlineData","locData","omit","mapValues","Math","round","makeTitle","lbl","capAll","wrds","colorscale","l","Stage","meta","children","location","restProps","className","Card","variant","Body","Title","as","Subtitle","loc","locHdr","compileHeader","Footer","hoverDot","d","rScale","type","y","missing","isNaN","cx","cy","r","opacity","stroke","strokeWidth","fill","Chart","props","jurisdiction","level","sortBy","size","rExtent","oAccessor","rAccessor","oLabel","responsiveWidth","projection","axes","orient","label","baseline","ticks","margin","top","right","bottom","left","style","pieceHoverAnnotation","tooltipContent","abbr","gap","customHoverBehavior","onHover","pieceIDAccessor","baseMarkProps","transitionDuration","svgAnnotationRules","Controls","register","useFormContext","Form","Row","Col","sm","lg","Group","controlId","Label","Control","name","ref","onChange","subjects","i","grades","comparisons","View","id","variable_keys","k","formMethods","useForm","mode","initValues","subject","grade","variable","comparison","hover","undefined","useState","setSubject","setGrade","setVariable","setComparison","setLocation","topicMeta","Container","abbrs","handleSubmit","formData","e","getValues","_subject","_grade","_variable","_comparison","target","App","basename","exact","path","render","to","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a81a095.chunk.js","sourcesContent":["import * as _ from 'lodash';\n\n///////////// general\nconst _filterByKey = (data, key, value, first = true) => (\n  first ? _.find(data, { [key]: value }) : _.filter(data, { [key]: value })\n);\n\n///////////// data reshaping & filtering\nconst getComparisons = (variables) => {\n  // return _.keys(variables)\n  return _.chain(variables)\n    .keys()\n    .map((v) => ({\n      compare: v,\n      displayCompare: variables[v].displayCompare\n    }))\n    .value();\n};\n\nconst getExtent = (data, x) => {\n  const values = _.map(data, x);\n  const range = _.max(values) - _.min(values);\n  const off = 0.025 * range;\n  return [(_.min(values) - off), (_.max(values) + off)];\n};\n\nconst sortByLoc = (data) => (\n  // add level\n  _.chain(data)\n    .map((d) => {\n      const l = d.jurisdiction === 'National' ? 1 : (d.jurisdiction === 'Connecticut' ? 2 : 3);\n      return { ...d, level: l };\n    })\n    .sortBy((d) => -d.level)\n    .value()\n  // _.sortBy(data, (d) => d.jurisdiction === 'Connecticut' || d.jurisdiction === 'National')\n);\n\nconst getHeadlineData = (data, value, key = 'jurisdiction') => {\n  const locData = _filterByKey(data, key, value);\n  return _.chain(locData)\n    .omit('jurisdiction')\n    .mapValues(Math.round)\n    .value();\n};\n\nconst sortMeta = (meta, first) => (\n  _.chain(meta)\n    .keys()\n    .sortBy((k) => _.startsWith(k, first)? 0 : 1)\n    .value()\n);\n\n///////////// strings & display\nconst fmt = (d) => (\n  _.isNil(d) ? 'N/A' : (d + '%')\n);\n\nconst makeTitle = (lbl, capAll = false) => {\n  const wrds = _.replace(lbl, /_/g, ' ');\n  return capAll ? _.startCase(wrds) : _.upperFirst(wrds);\n};\n\nconst compileHeader = (loc) => {\n  const locHdr = loc === 'National' ? 'Nationwide' : 'In <%= location %>';\n  return _.template(locHdr + ', <%= data.second %> percent of <%= second.displayGroup %> and <%= data.main %> percent of <%= main.displayGroup %> were at or above proficient in <%= _.replace(grade, /_/g, \" \") %> <%= subject %>. That\\'s a <%= data.gap %> point gap.');\n};\n\n///////////// viz\nconst colorscale = (l) => {\n  // #CC6677, #882255, #6699CC\n  switch (l) {\n    case 'Connecticut':\n      return 'rgba(136, 34, 85, 1.00)';\n    case 'National':\n      return 'rgba(204, 102, 119, 1.00)';\n    // case location:\n    //   return 'rgba(102, 153, 204, 1.00)';\n    default:\n      return 'rgba(135, 135, 135, 0.60)';\n  }\n};\n\n//////////// routing\nconst makePaths = (keys) => (\n  _.zipObject(keys, _.map(keys, (k) => _.replace(k, /\\W/, '_')))\n);\n\n\n//////////////////////////\n\nexport {\n  colorscale,\n  compileHeader,\n  fmt,\n  getComparisons,\n  getExtent,\n  getHeadlineData,\n  makePaths,\n  makeTitle,\n  sortByLoc,\n  sortMeta\n};\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { compileHeader } from './utils.js';\n\nimport '../styles/Stage.css';\n\nconst Stage = ({ meta, children, location, ...restProps }) =>  (\n  <div className='Stage'>\n    <Card variant='light'>\n      <Card.Body>\n        <Card.Title as='h5'>{ meta && (meta.displayCompare + ' achievement gap') }</Card.Title>\n        <Card.Subtitle>{ meta && compileHeader(location)({ location, ...meta, ...restProps }) }</Card.Subtitle>\n        { children }\n      </Card.Body>\n      <Card.Footer>\n        <p>Source: 2019 National Assessment for Educational Progress overseen by the U.S. Department of Education</p>\n        <p>Camille Seaberry, DataHaven</p>\n      </Card.Footer>\n    </Card>\n  </div>\n);\n\n\nexport default Stage;\n","import React from 'react';\nimport { ResponsiveOrdinalFrame } from 'semiotic';\nimport { getExtent, sortByLoc } from './utils.js';\n\nimport '../styles/Chart.css';\n\nconst Chart = (props) => {\n  return (\n    <div className='Chart'>\n      <ResponsiveOrdinalFrame\n        data={ sortByLoc(props.data) }\n        size={ [800, 150] }\n        type={{\n          type: 'point',\n          r: 14\n        }}\n        rExtent={ getExtent(props.data, 'gap') }\n        oAccessor='none'\n        rAccessor='gap'\n        oLabel={ false }\n        responsiveWidth={ true }\n        projection='horizontal'\n        axes={ [{\n          orient: 'bottom',\n          label: 'Gap in passing rates',\n          baseline: 'under',\n          ticks: 5,\n          // tickFormat: fmt\n        }] }\n        margin={{ top: 20, right: 5, bottom: 60, left: 5 }}\n        style={ (d) => ({\n          fill: props.colorscale(d.jurisdiction),\n          stroke: 'white',\n          strokeWidth: '0.5px',\n          // opacity: 0.6\n        }) }\n        pieceHoverAnnotation={ [{\n          type: 'highlight',\n          // style: (d) => ({\n          //   opacity: 1.0,\n          //   stroke: '#666',\n          //   strokeWidth: '2px'\n          // })\n        }, {\n          type: 'frame-hover'\n        }] }\n        tooltipContent={ (d) => (\n          <div className='tooltip-content'>{`${ props.abbr }: ${ Math.round(d.gap) }`}</div>\n        ) }\n        customHoverBehavior={ props.onHover }\n        pieceIDAccessor='jurisdiction'\n        baseMarkProps={{\n          transitionDuration: { fill: 200 }\n        }}\n        svgAnnotationRules={ hoverDot }\n      />\n    </div>\n  );\n};\n\nconst hoverDot = ({ d, rScale }) => {\n  if (d.type === 'highlight') {\n    const { x, y } = d;\n    const missing = isNaN(x) || isNaN(y);\n    // const coords = missing ? [0, 0] : screenCoordinates;\n    if (missing) {\n      return null;\n    } else {\n      return (\n        <g >\n          <circle\n            className='hover'\n            cx={ !missing && x }\n            cy={ !missing && y }\n\n            r={ 14 }\n            opacity={ 1.0 }\n            stroke={ '#666' }\n            strokeWidth={ '2px' }\n            fill={ '#6699CC' }\n          />\n        </g>\n      );\n    }\n  }\n};\n\nexport default Chart;\n","import React from 'react';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport { useFormContext } from 'react-hook-form';\nimport { makeTitle } from './utils.js';\n\nimport '../styles/Controls.css';\n\nconst Controls = (props) => {\n  const { register } = useFormContext();\n  // const variables = Object.keys(props.variables);\n\n  return (\n    <div className='Controls'>\n      <Form>\n        <Row>\n          <Col sm={ 6 } lg={ 2 }>\n            <Form.Group controlId='_subject'>\n              <Form.Label>Subject</Form.Label>\n              <Form.Control as='select' name='_subject' className='custom-select' ref={ register } onChange={ props.onChange }>{\n                props.subjects.map((d, i) => (\n                  <option key={ `${ d }-select` } value={ d }>{ makeTitle(d) }</option>\n                ))\n              }</Form.Control>\n            </Form.Group>\n          </Col>\n\n          <Col sm={ 6 } lg={ 2 }>\n            <Form.Group controlId='_grade'>\n              <Form.Label>Grade</Form.Label>\n              <Form.Control as='select' name='_grade' className='custom-select' ref={ register } onChange={ props.onChange }>{\n                props.grades.map((d, i) => (\n                  <option key={ `${ d }-select` } value={ d }>{ makeTitle(d) }</option>\n                ))\n              }</Form.Control>\n            </Form.Group>\n          </Col>\n\n          <Col sm={ 6 } lg={ 3 }>\n            <Form.Group controlId='_variable'>\n              <Form.Label>Compare students by</Form.Label>\n              <Form.Control as='select' name='_variable' className='custom-select' ref={ register } onChange={ props.onChange }>{\n                props.variables.map((d, i) => (\n                  <option key={ `${ d }-select` } value={ d }>{ makeTitle(d) }</option>\n                ))\n              }</Form.Control>\n            </Form.Group>\n          </Col>\n\n          <Col sm={ 6 } lg={ 5 }>\n            <Form.Group controlId='_comparison'>\n              <Form.Label>Student groups</Form.Label>\n              <Form.Control as='select' name='_comparison' className='custom-select' ref={ register } onChange={ props.onChange }>{\n                props.comparisons.map((d, i) => (\n                  <option key={ `${ d.compare }-select` } value={ d.compare }>{ d.displayCompare }</option>\n                ))\n              }</Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  )\n};\n\nexport default Controls;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, useParams, useLocation } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useForm, FormContext } from 'react-hook-form';\nimport { getComparisons, getHeadlineData, colorscale, sortMeta } from './components/utils.js';\n\nimport Stage from './components/Stage';\nimport Chart from './components/Chart';\nimport Controls from './components/Controls';\n\nimport './App.css';\n\nimport data from './data/naep_data.json';\nimport meta from './data/naep_meta.json';\nimport abbrs from './data/state_abbr.json';\n\n\n\nconst App = () => (\n  <Router basename='/naep_viz/'>\n    <Switch>\n      <Route exact path='/' render={ () => <Redirect to='/race' /> } />\n      {/* <Route exact={ false } path='/:id' children={ <View /> } /> */}\n      <Route path='/race'>\n        <View id='race/ethnicity' />\n      </Route>\n      <Route path='/family_income'>\n        <View id='family_income' />\n      </Route>\n    </Switch>\n  </Router>\n);\n\n\n\nconst View = ({ id }) => {\n  // let { id } = useParams();\n  // const id = useLocation().pathname.substring(1);\n  const variable_keys = sortMeta(meta.variables, id);\n\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n\n  ///////////// inits\n  const initValues = {\n    subject: meta.subjects[0],\n    grade: meta.grades[0],\n    variable: variable_keys[0],\n    comparison: getComparisons(meta.variables[variable_keys[0]])[0].compare,\n    location: 'Connecticut',\n    hover: undefined\n  };\n\n  ///////////// state\n  const [subject, setSubject] = useState(initValues.subject);\n  const [grade, setGrade] = useState(initValues.grade);\n  const [variable, setVariable] = useState(initValues.variable);\n  const [comparison, setComparison] = useState(initValues.comparison);\n  const [location, setLocation] = useState(initValues.location);\n  // const [hover, setHover] = useState(initValues.hover);\n\n  ///////////// events\n  const onFormChange = (formData, e) => {\n    const { _subject, _grade, _variable, _comparison } = formMethods.getValues();\n    setSubject(_subject);\n    setGrade(_grade);\n    if (e.target.name === '_variable') {\n      setComparison(getComparisons(meta.variables[_variable])[0].compare);\n    } else {\n      setComparison(_comparison);\n    }\n    setVariable(_variable);\n  };\n\n  const onDotHover = (d) => {\n    setLocation(d ? d.jurisdiction : initValues.location);\n  };\n\n  const topicMeta = meta.variables[variable];\n\n  return (\n    <div className='App'>\n      <Container>\n        <Row>\n          <Col className='px-0'>\n            <Stage\n              meta={ topicMeta[comparison] }\n              location={ location }\n              data={ getHeadlineData(data[comparison][subject][grade], location) }\n              grade={ grade }\n              subject={ subject }\n            >\n              <Chart\n                data={ data[comparison][subject][grade] }\n                onHover={ onDotHover }\n                colorscale={ colorscale }\n                location={ location }\n                abbr={ abbrs[location] }\n              />\n              <FormContext { ...formMethods }>\n                <Controls\n                  onChange={ formMethods.handleSubmit(onFormChange) }\n                  variable={ variable }\n                  comparisons={ getComparisons(topicMeta) }\n                  { ...meta }\n                  variables={ variable_keys }\n                />\n              </FormContext>\n            </Stage>\n          </Col>\n        </Row>\n\n        <Row>\n        </Row>\n      </Container>\n    </div>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}